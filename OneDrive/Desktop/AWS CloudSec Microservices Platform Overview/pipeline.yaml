AWSTemplateFormatVersion: '2010-09-09'
Description: 'AWS CloudFormation template for CI/CD pipeline with AWS CodePipeline, CodeBuild, and CodeDeploy'

Parameters:
  GitHubOwner:
    Type: String
    Description: GitHub repository owner
    Default: example-org
  
  GitHubRepo:
    Type: String
    Description: GitHub repository name
    Default: aws-cloudsec-microservices
  
  GitHubBranch:
    Type: String
    Description: GitHub repository branch
    Default: main
  
  GitHubToken:
    Type: String
    Description: GitHub OAuth token
    NoEcho: true
  
  ArtifactBucketName:
    Type: String
    Description: S3 bucket for storing pipeline artifacts
    Default: cloudsec-pipeline-artifacts

  EksClusterName:
    Type: String
    Description: Name of the EKS cluster
    Default: cloudsec-eks-cluster

Resources:
  # S3 bucket for pipeline artifacts
  ArtifactBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref ArtifactBucketName
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

  # ECR repositories for Docker images
  AuthenticationServiceRepository:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: authentication-service
      ImageScanningConfiguration:
        ScanOnPush: true
      EncryptionConfiguration:
        EncryptionType: KMS
      ImageTagMutability: IMMUTABLE

  BusinessServiceRepository:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: business-service
      ImageScanningConfiguration:
        ScanOnPush: true
      EncryptionConfiguration:
        EncryptionType: KMS
      ImageTagMutability: IMMUTABLE

  FrontendServiceRepository:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: frontend-service
      ImageScanningConfiguration:
        ScanOnPush: true
      EncryptionConfiguration:
        EncryptionType: KMS
      ImageTagMutability: IMMUTABLE

  # CodeBuild role
  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonECR-FullAccess
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
        - arn:aws:iam::aws:policy/CloudWatchLogsFullAccess
      Policies:
        - PolicyName: CodeBuildServiceRolePolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: '*'
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:PutObject
                Resource:
                  - !Sub arn:aws:s3:::${ArtifactBucketName}/*
              - Effect: Allow
                Action:
                  - ecr:GetAuthorizationToken
                  - ecr:BatchCheckLayerAvailability
                  - ecr:GetDownloadUrlForLayer
                  - ecr:BatchGetImage
                  - ecr:InitiateLayerUpload
                  - ecr:UploadLayerPart
                  - ecr:CompleteLayerUpload
                  - ecr:PutImage
                Resource: '*'

  # CodePipeline role
  CodePipelineServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSCodeBuildAdminAccess
      Policies:
        - PolicyName: CodePipelineServiceRolePolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:PutObject
                Resource:
                  - !Sub arn:aws:s3:::${ArtifactBucketName}/*
              - Effect: Allow
                Action:
                  - codebuild:StartBuild
                  - codebuild:BatchGetBuilds
                Resource: '*'
              - Effect: Allow
                Action:
                  - eks:DescribeCluster
                Resource: !Sub arn:aws:eks:${AWS::Region}:${AWS::AccountId}:cluster/${EksClusterName}

  # CodeBuild project for authentication service
  AuthenticationServiceBuild:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: authentication-service-build
      Description: Build project for authentication service
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:3.0
        PrivilegedMode: true
        EnvironmentVariables:
          - Name: AWS_ACCOUNT_ID
            Value: !Ref AWS::AccountId
          - Name: AWS_REGION
            Value: !Ref AWS::Region
          - Name: ECR_REPOSITORY_URI
            Value: !Sub ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${AuthenticationServiceRepository}
          - Name: IMAGE_TAG
            Value: latest
      Source:
        Type: CODEPIPELINE
        BuildSpec: microservices/authentication-service/buildspec.yml
      TimeoutInMinutes: 15

  # CodeBuild project for business service
  BusinessServiceBuild:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: business-service-build
      Description: Build project for business service
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:3.0
        PrivilegedMode: true
        EnvironmentVariables:
          - Name: AWS_ACCOUNT_ID
            Value: !Ref AWS::AccountId
          - Name: AWS_REGION
            Value: !Ref AWS::Region
          - Name: ECR_REPOSITORY_URI
            Value: !Sub ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${BusinessServiceRepository}
          - Name: IMAGE_TAG
            Value: latest
      Source:
        Type: CODEPIPELINE
        BuildSpec: microservices/business-service/buildspec.yml
      TimeoutInMinutes: 15

  # CodeBuild project for frontend service
  FrontendServiceBuild:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: frontend-service-build
      Description: Build project for frontend service
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:3.0
        PrivilegedMode: true
        EnvironmentVariables:
          - Name: AWS_ACCOUNT_ID
            Value: !Ref AWS::AccountId
          - Name: AWS_REGION
            Value: !Ref AWS::Region
          - Name: ECR_REPOSITORY_URI
            Value: !Sub ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${FrontendServiceRepository}
          - Name: IMAGE_TAG
            Value: latest
      Source:
        Type: CODEPIPELINE
        BuildSpec: microservices/frontend-service/buildspec.yml
      TimeoutInMinutes: 15

  # CodeBuild project for security scanning
  SecurityScanningBuild:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: security-scanning-build
      Description: Build project for security scanning
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:3.0
        PrivilegedMode: true
      Source:
        Type: CODEPIPELINE
        BuildSpec: security/buildspec.yml
      TimeoutInMinutes: 15

  # CodeBuild project for Kubernetes deployment
  KubernetesDeployBuild:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: kubernetes-deploy-build
      Description: Build project for Kubernetes deployment
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:3.0
        PrivilegedMode: true
        EnvironmentVariables:
          - Name: AWS_ACCOUNT_ID
            Value: !Ref AWS::AccountId
          - Name: AWS_REGION
            Value: !Ref AWS::Region
          - Name: EKS_CLUSTER_NAME
            Value: !Ref EksClusterName
      Source:
        Type: CODEPIPELINE
        BuildSpec: kubernetes/buildspec.yml
      TimeoutInMinutes: 15

  # CodePipeline
  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: cloudsec-microservices-pipeline
      RoleArn: !GetAtt CodePipelineServiceRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactBucket
      Stages:
        # Source stage
        - Name: Source
          Actions:
            - Name: Source
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: '1'
              Configuration:
                Owner: !Ref GitHubOwner
                Repo: !Ref GitHubRepo
                Branch: !Ref GitHubBranch
                OAuthToken: !Ref GitHubToken
              OutputArtifacts:
                - Name: SourceCode

        # Build stage
        - Name: Build
          Actions:
            - Name: BuildAuthenticationService
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              Configuration:
                ProjectName: !Ref AuthenticationServiceBuild
              InputArtifacts:
                - Name: SourceCode
              OutputArtifacts:
                - Name: AuthenticationServiceBuildOutput
              RunOrder: 1
            
            - Name: BuildBusinessService
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              Configuration:
                ProjectName: !Ref BusinessServiceBuild
              InputArtifacts:
                - Name: SourceCode
              OutputArtifacts:
                - Name: BusinessServiceBuildOutput
              RunOrder: 1
            
            - Name: BuildFrontendService
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              Configuration:
                ProjectName: !Ref FrontendServiceBuild
              InputArtifacts:
                - Name: SourceCode
              OutputArtifacts:
                - Name: FrontendServiceBuildOutput
              RunOrder: 1

        # Test stage
        - Name: Test
          Actions:
            - Name: SecurityScanning
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              Configuration:
                ProjectName: !Ref SecurityScanningBuild
              InputArtifacts:
                - Name: SourceCode
              OutputArtifacts:
                - Name: SecurityScanningOutput
              RunOrder: 1

        # Deploy stage
        - Name: Deploy
          Actions:
            - Name: DeployToKubernetes
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              Configuration:
                ProjectName: !Ref KubernetesDeployBuild
              InputArtifacts:
                - Name: SourceCode
                - Name: AuthenticationServiceBuildOutput
                - Name: BusinessServiceBuildOutput
                - Name: FrontendServiceBuildOutput
              RunOrder: 1

Outputs:
  PipelineURL:
    Description: URL to the CodePipeline console
    Value: !Sub https://console.aws.amazon.com/codepipeline/home?region=${AWS::Region}#/view/${Pipeline}
  
  AuthenticationServiceRepository:
    Description: ECR repository for authentication service
    Value: !Sub ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${AuthenticationServiceRepository}
  
  BusinessServiceRepository:
    Description: ECR repository for business service
    Value: !Sub ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${BusinessServiceRepository}
  
  FrontendServiceRepository:
    Description: ECR repository for frontend service
    Value: !Sub ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${FrontendServiceRepository}
