version: 0.2

phases:
  install:
    runtime-versions:
      nodejs: 16
    commands:
      - echo Installing dependencies...
      - cd microservices/authentication-service
      - npm ci
  
  pre_build:
    commands:
      - echo Running tests...
      - npm test
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
  
  build:
    commands:
      - echo Building the Docker image...
      - cd ../../
      - docker build -t $ECR_REPOSITORY_URI:latest -t $ECR_REPOSITORY_URI:$IMAGE_TAG -f docker/authentication-service.Dockerfile microservices/authentication-service
      - echo Running vulnerability scan...
      - trivy image --exit-code 1 --severity HIGH,CRITICAL $ECR_REPOSITORY_URI:latest
  
  post_build:
    commands:
      - echo Pushing the Docker image...
      - docker push $ECR_REPOSITORY_URI:latest
      - docker push $ECR_REPOSITORY_URI:$IMAGE_TAG
      - echo Writing image definitions file...
      - echo "{\"ImageURI\":\"$ECR_REPOSITORY_URI:$IMAGE_TAG\"}" > imageDefinition.json

artifacts:
  files:
    - imageDefinition.json
    - kubernetes/base/authentication-deployment.yaml
    - kubernetes/base/authentication-service.yaml
    - appspec.yaml
  discard-paths: no

cache:
  paths:
    - 'microservices/authentication-service/node_modules/**/*'
